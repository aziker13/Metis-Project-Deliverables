<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.0917.1006                               -->
<workbook source-build='2021.3.1 (20213.21.0917.1006)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <ParameterAction />
    <_.fcp.ParameterActionClearSelection.true...ParameterActionClearSelection />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Sweetness?' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Extra-Dry&quot;' />
          <member value='&quot;Dry&quot;' />
          <member value='&quot;Medium&quot;' />
          <member value='&quot;Medium-Sweet&quot;' />
          <member value='&quot;Sweet&quot;' />
          <member value='&quot;Any&quot;' />
        </members>
      </column>
      <column caption='Red or White?' datatype='string' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Both&quot;'>
        <calculation class='tableau' formula='&quot;Both&quot;' />
        <desc>
          <formatted-text>
            <run>Choose either &quot;Red&quot; or &quot;White wine</run>
          </formatted-text>
        </desc>
        <members>
          <member value='&quot;Red&quot;' />
          <member value='&quot;White&quot;' />
          <member value='&quot;Both&quot;' />
        </members>
      </column>
      <column caption='Good or poor rating?' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Either&quot;'>
        <calculation class='tableau' formula='&quot;Either&quot;' />
        <members>
          <member value='&quot;Good&quot;' />
          <member value='&quot;Poor&quot;' />
          <member value='&quot;Either&quot;' />
        </members>
      </column>
      <column caption='Quality' datatype='integer' datatype-customized='true' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='8'>
        <calculation class='tableau' formula='8' />
        <range max='9' min='3' />
      </column>
      <column caption='Body?' datatype='string' name='[red/white (copy)_1016124693943943168]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
        <calculation class='tableau' formula='&quot;All&quot;' />
        <members>
          <member value='&quot;Light-Bodied&quot;' />
          <member value='&quot;Medium-Bodied&quot;' />
          <member value='&quot;Full-Bodied&quot;' />
          <member value='&quot;All&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='winequality-red' inline='true' name='federated.08bwzi51wo3p411ahgcov1a86pmk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='winequality-red' name='textscan.0tvfns610ti90c1c5m2eb111eb26'>
            <connection class='textscan' directory='C:/Users/Alika Ziker/Downloads' filename='winequality-red.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0tvfns610ti90c1c5m2eb111eb26' name='winequality-red.csv' table='[winequality-red#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Wine ID' ordinal='0' />
            <column datatype='string' name='Red/White' ordinal='1' />
            <column datatype='real' name='fixed acidity' ordinal='2' />
            <column datatype='real' name='volatile acidity' ordinal='3' />
            <column datatype='real' name='citric acid' ordinal='4' />
            <column datatype='real' name='residual sugar' ordinal='5' />
            <column datatype='real' name='chlorides' ordinal='6' />
            <column datatype='real' name='free sulfur dioxide' ordinal='7' />
            <column datatype='real' name='total sulfur dioxide' ordinal='8' />
            <column datatype='real' name='density' ordinal='9' />
            <column datatype='real' name='pH' ordinal='10' />
            <column datatype='real' name='sulphates' ordinal='11' />
            <column datatype='real' name='alcohol' ordinal='12' />
            <column datatype='integer' name='quality' ordinal='13' />
            <column datatype='real' name='Latitude' ordinal='14' />
            <column datatype='real' name='Longitude' ordinal='15' />
            <column datatype='string' name='F17' ordinal='16' />
            <column datatype='string' name='F18' ordinal='17' />
            <column datatype='string' name='F19' ordinal='18' />
            <column datatype='string' name='F20' ordinal='19' />
            <column datatype='string' name='F21' ordinal='20' />
            <column datatype='string' name='F22' ordinal='21' />
            <column datatype='integer' name='F23' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0tvfns610ti90c1c5m2eb111eb26' name='winequality-red.csv' table='[winequality-red#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Wine ID' ordinal='0' />
            <column datatype='string' name='Red/White' ordinal='1' />
            <column datatype='real' name='fixed acidity' ordinal='2' />
            <column datatype='real' name='volatile acidity' ordinal='3' />
            <column datatype='real' name='citric acid' ordinal='4' />
            <column datatype='real' name='residual sugar' ordinal='5' />
            <column datatype='real' name='chlorides' ordinal='6' />
            <column datatype='real' name='free sulfur dioxide' ordinal='7' />
            <column datatype='real' name='total sulfur dioxide' ordinal='8' />
            <column datatype='real' name='density' ordinal='9' />
            <column datatype='real' name='pH' ordinal='10' />
            <column datatype='real' name='sulphates' ordinal='11' />
            <column datatype='real' name='alcohol' ordinal='12' />
            <column datatype='integer' name='quality' ordinal='13' />
            <column datatype='real' name='Latitude' ordinal='14' />
            <column datatype='real' name='Longitude' ordinal='15' />
            <column datatype='string' name='F17' ordinal='16' />
            <column datatype='string' name='F18' ordinal='17' />
            <column datatype='string' name='F19' ordinal='18' />
            <column datatype='string' name='F20' ordinal='19' />
            <column datatype='string' name='F21' ordinal='20' />
            <column datatype='string' name='F22' ordinal='21' />
            <column datatype='integer' name='F23' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wine ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Wine ID]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>Wine ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Red/White</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Red/White]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>Red/White</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fixed acidity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fixed acidity]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>fixed acidity</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volatile acidity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volatile acidity]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>volatile acidity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>citric acid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[citric acid]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>citric acid</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>residual sugar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[residual sugar]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>residual sugar</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>chlorides</remote-name>
            <remote-type>5</remote-type>
            <local-name>[chlorides]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>chlorides</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>free sulfur dioxide</remote-name>
            <remote-type>5</remote-type>
            <local-name>[free sulfur dioxide]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>free sulfur dioxide</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total sulfur dioxide</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total sulfur dioxide]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>total sulfur dioxide</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[density]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>density</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pH]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>pH</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sulphates</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sulphates]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>sulphates</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alcohol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[alcohol]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>alcohol</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quality</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quality]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>quality</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F17</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F17]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>F17</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F18</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F18]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>F18</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F19</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F19]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>F19</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F20</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F20]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>F20</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F21</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F21]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>F21</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F22</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F22]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>F22</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F23</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F23]</local-name>
            <parent-name>[winequality-red.csv]</parent-name>
            <remote-alias>F23</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Alcohol (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[alcohol]' peg='0' size='0.5' />
      </column>
      <column caption='Red' datatype='boolean' name='[Calculation_1016124693952077826]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Red/White] = &quot;Red&quot;' />
      </column>
      <column caption='White' datatype='boolean' name='[Calculation_1016124693952331779]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Red/White] = &quot;White&quot;' />
      </column>
      <column caption='Red/White Filter' datatype='boolean' name='[Calculation_1016124693952446468]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='( [Parameters].[Parameter 2] = &quot;Red&quot; AND [Calculation_1016124693952077826] )&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 2] = &quot;White&quot; AND [Calculation_1016124693952331779])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 2] = &quot;Both&quot; AND [Calculation_1016124693962498058])' />
      </column>
      <column caption='Light-Bodied' datatype='boolean' name='[Calculation_1016124693955674117]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1343480090941239299] = &quot;Light-Bodied&quot;' />
      </column>
      <column caption='Medium-Bodied' datatype='boolean' name='[Calculation_1016124693955919878]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1343480090941239299] = &quot;Medium-Bodied&quot;' />
      </column>
      <column caption='Full-Bodied' datatype='boolean' name='[Calculation_1016124693956014087]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1343480090941239299] = &quot;Full-Bodied&quot;' />
      </column>
      <column caption='Body filter' datatype='boolean' name='[Calculation_1016124693956161544]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='( [Parameters].[red/white (copy)_1016124693943943168] = &quot;Light-Bodied&quot; AND [Calculation_1016124693955674117])&#13;&#10;OR&#13;&#10;( [Parameters].[red/white (copy)_1016124693943943168] = &quot;Medium-Bodied&quot; AND [Calculation_1016124693955919878])&#13;&#10;OR&#13;&#10;( [Parameters].[red/white (copy)_1016124693943943168] = &quot;Full-Bodied&quot; AND [Calculation_1016124693956014087])&#13;&#10;OR&#13;&#10;( [Parameters].[red/white (copy)_1016124693943943168] = &quot;All&quot; AND [Calculation_1016124693968658444])' />
      </column>
      <column caption='Both' datatype='boolean' name='[Calculation_1016124693962498058]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Red/White] = &quot;Red&quot;&#13;&#10;OR&#13;&#10;[Red/White] = &quot;White&quot;' />
      </column>
      <column caption='All' datatype='boolean' name='[Calculation_1016124693968658444]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1343480090941239299] = &quot;Light-Bodied&quot;&#13;&#10;OR&#13;&#10;[Calculation_1343480090941239299] = &quot;Medium-Bodied&quot;&#13;&#10;OR&#13;&#10;[Calculation_1343480090941239299] = &quot;Full-Bodied&quot;' />
      </column>
      <column caption='Extra-Dry' datatype='boolean' name='[Calculation_1016124693973319693]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1343480090982629380] = &quot;Extra-Dry&quot;' />
      </column>
      <column caption='Dry' datatype='boolean' name='[Calculation_1016124693973463054]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1343480090982629380] = &quot;Dry&quot;' />
      </column>
      <column caption='Medium' datatype='boolean' name='[Calculation_1016124693973549071]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1343480090982629380] = &quot;Medium&quot;' />
      </column>
      <column caption='Medium-Sweet' datatype='boolean' name='[Calculation_1016124693973991440]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1343480090982629380] = &quot;Medium-Sweet&quot;' />
      </column>
      <column caption='Sweet' datatype='boolean' name='[Calculation_1016124693974069265]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1343480090982629380] = &quot;Sweet&quot;' />
      </column>
      <column caption='Any' datatype='boolean' name='[Calculation_1016124693974200338]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1343480090982629380] = &quot;Extra-Dry&quot;&#13;&#10;OR &#13;&#10;[Calculation_1343480090982629380] = &quot;Dry&quot;&#13;&#10;OR &#13;&#10;[Calculation_1343480090982629380] = &quot;Medium&quot;&#13;&#10;OR &#13;&#10;[Calculation_1343480090982629380] = &quot;Medium-Sweet&quot;&#13;&#10;OR &#13;&#10;[Calculation_1343480090982629380] = &quot;Sweet&quot;' />
      </column>
      <column caption='Sweetness filter' datatype='boolean' name='[Calculation_1016124693974597651]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='( [Parameters].[Parameter 1] = &quot;Extra-Dry&quot; AND [Calculation_1016124693973319693])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 1] = &quot;Dry&quot; AND [Calculation_1016124693973463054])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 1] = &quot;Medium&quot; AND [Calculation_1016124693973549071])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 1] = &quot;Medium-Sweet&quot; AND [Calculation_1016124693973991440])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 1] = &quot;Sweet&quot; AND [Calculation_1016124693974069265])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 1] = &quot;Any&quot; AND [Calculation_1016124693974200338])' />
      </column>
      <column caption='good or bad' datatype='string' name='[Calculation_1343480090863804416]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [quality] &gt; 6.5 THEN &quot;Good&quot;&#13;&#10;Else &quot;Bad&quot;&#13;&#10;END' />
      </column>
      <column caption='Body' datatype='string' name='[Calculation_1343480090941239299]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [alcohol] &gt; 13.4 THEN &quot;Full-Bodied&quot;&#13;&#10;ELSEIF  [alcohol] &gt; 12.4 THEN &quot;Medium-Bodied&quot;&#13;&#10;ELSE  &quot;Light-Bodied&quot;&#13;&#10;END' />
      </column>
      <column caption='sweetness' datatype='string' name='[Calculation_1343480090982629380]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  [residual sugar] &lt; 5.0 THEN &quot;Extra-Dry&quot;&#13;&#10;ELSEIF [residual sugar] &lt; 15.0 THEN &quot;Dry&quot;&#13;&#10;ELSEIF [residual sugar] &lt; 35.0 THEN &quot;Medium&quot;&#13;&#10;ELSEIF [residual sugar] &lt; 45.0 THEN &quot;Medium-Sweet&quot;&#13;&#10;ELSE &quot;Sweet&quot;&#13;&#10;END' />
      </column>
      <column caption='Good' datatype='boolean' name='[Calculation_481040763291832320]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1343480090863804416] = &quot;Good&quot;' />
      </column>
      <column caption='Poor' datatype='boolean' name='[Calculation_481040763291930625]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1343480090863804416] = &quot;Bad&quot;' />
      </column>
      <column caption='Either' datatype='boolean' name='[Calculation_481040763292024834]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1343480090863804416] = &quot;Good&quot;&#13;&#10;OR&#13;&#10;[Calculation_1343480090863804416] = &quot;Bad&quot;' />
      </column>
      <column caption='Good or Poor filter' datatype='boolean' name='[Calculation_481040763292143619]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='( [Parameters].[Parameter 3] = &quot;Good&quot; AND [Calculation_481040763291832320])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 3] = &quot;Poor&quot; AND [Calculation_481040763291930625])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 3] = &quot;Either&quot; AND [Calculation_481040763292024834])' />
      </column>
      <column caption='8 or higher' datatype='boolean' name='[Calculation_481040763297505284]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[quality] &gt; 7' />
      </column>
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Quality (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[quality]' peg='0' size='0.998' />
      </column>
      <column datatype='string' name='[Red/White]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='winequality-red.csv' datatype='table' name='[__tableau_internal_object_id__].[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]' role='measure' type='quantitative' />
      <column caption='Alcohol' datatype='real' name='[alcohol]' role='measure' type='quantitative' />
      <column caption='Chlorides' datatype='real' name='[chlorides]' role='measure' type='quantitative' />
      <column caption='Citric Acid' datatype='real' name='[citric acid]' role='measure' type='quantitative' />
      <column caption='Density' datatype='real' name='[density]' role='measure' type='quantitative' />
      <column caption='Fixed Acidity' datatype='real' name='[fixed acidity]' role='measure' type='quantitative' />
      <column caption='Free Sulfur Dioxide' datatype='real' name='[free sulfur dioxide]' role='measure' type='quantitative' />
      <column caption='P H' datatype='real' name='[pH]' role='measure' type='quantitative' />
      <column caption='Quality' datatype='integer' name='[quality]' role='measure' type='quantitative' />
      <column caption='Residual Sugar' datatype='real' name='[residual sugar]' role='measure' type='quantitative' />
      <column caption='Sulphates' datatype='real' name='[sulphates]' role='measure' type='quantitative' />
      <column caption='Total Sulfur Dioxide' datatype='real' name='[total sulfur dioxide]' role='measure' type='quantitative' />
      <column caption='Volatile Acidity' datatype='real' name='[volatile acidity]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F:qk]' pivot='key' type='quantitative' />
      <column-instance column='[alcohol]' derivation='Attribute' name='[attr:alcohol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[chlorides]' derivation='Attribute' name='[attr:chlorides:qk]' pivot='key' type='quantitative' />
      <column-instance column='[quality]' derivation='Attribute' name='[attr:quality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[alcohol]' derivation='Avg' name='[avg:alcohol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[chlorides]' derivation='Avg' name='[avg:chlorides:qk]' pivot='key' type='quantitative' />
      <column-instance column='[citric acid]' derivation='Avg' name='[avg:citric acid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[density]' derivation='Avg' name='[avg:density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fixed acidity]' derivation='Avg' name='[avg:fixed acidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[free sulfur dioxide]' derivation='Avg' name='[avg:free sulfur dioxide:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pH]' derivation='Avg' name='[avg:pH:qk]' pivot='key' type='quantitative' />
      <column-instance column='[quality]' derivation='Avg' name='[avg:quality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[residual sugar]' derivation='Avg' name='[avg:residual sugar:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sulphates]' derivation='Avg' name='[avg:sulphates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total sulfur dioxide]' derivation='Avg' name='[avg:total sulfur dioxide:qk]' pivot='key' type='quantitative' />
      <column-instance column='[volatile acidity]' derivation='Avg' name='[avg:volatile acidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[alcohol]' derivation='Count' name='[cnt:alcohol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[quality]' derivation='Max' name='[max:quality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[residual sugar]' derivation='Max' name='[max:residual sugar:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_481040763297505284]' derivation='None' name='[none:Calculation_481040763297505284:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Quality (bin)]' derivation='None' name='[none:Quality (bin):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Red/White]' derivation='None' name='[none:Red/White:nk]' pivot='key' type='nominal' />
      <column-instance column='[alcohol]' derivation='None' name='[none:alcohol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[chlorides]' derivation='None' name='[none:chlorides:qk]' pivot='key' type='quantitative' />
      <column-instance column='[citric acid]' derivation='None' name='[none:citric acid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fixed acidity]' derivation='None' name='[none:fixed acidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[quality]' derivation='None' name='[none:quality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[residual sugar]' derivation='None' name='[none:residual sugar:qk]' pivot='key' type='quantitative' />
      <column-instance column='[alcohol]' derivation='Sum' name='[sum:alcohol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[chlorides]' derivation='Sum' name='[sum:chlorides:qk]' pivot='key' type='quantitative' />
      <column-instance column='[citric acid]' derivation='Sum' name='[sum:citric acid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[density]' derivation='Sum' name='[sum:density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fixed acidity]' derivation='Sum' name='[sum:fixed acidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[free sulfur dioxide]' derivation='Sum' name='[sum:free sulfur dioxide:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pH]' derivation='Sum' name='[sum:pH:qk]' pivot='key' type='quantitative' />
      <column-instance column='[quality]' derivation='Sum' name='[sum:quality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[residual sugar]' derivation='Sum' name='[sum:residual sugar:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sulphates]' derivation='Sum' name='[sum:sulphates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total sulfur dioxide]' derivation='Sum' name='[sum:total sulfur dioxide:qk]' pivot='key' type='quantitative' />
      <column-instance column='[volatile acidity]' derivation='Sum' name='[sum:volatile acidity:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[attr:quality:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:quality:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[max:quality:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Quality (bin):qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:quality:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[sum:quality:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[attr:alcohol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:alcohol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[cnt:alcohol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:alcohol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[sum:alcohol:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:density:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[sum:density:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:volatile acidity:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[sum:volatile acidity:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:residual sugar:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[max:residual sugar:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:residual sugar:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[sum:residual sugar:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:fixed acidity:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:fixed acidity:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[sum:fixed acidity:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[attr:chlorides:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:chlorides:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:chlorides:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[sum:chlorides:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:free sulfur dioxide:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[sum:free sulfur dioxide:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:sulphates:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[sum:sulphates:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:pH:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[sum:pH:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:citric acid:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:citric acid:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[sum:citric acid:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:total sulfur dioxide:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[sum:total sulfur dioxide:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[__tableau_internal_object_id__].[cnt:winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_481040763297505284:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Red/White:nk]' type='palette'>
            <map to='#a71843'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>&quot;White&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Sweetness?' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Red or White?' datatype='string' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Both&quot;'>
          <calculation class='tableau' formula='&quot;Both&quot;' />
          <desc>
            <formatted-text>
              <run>Choose either &quot;Red&quot; or &quot;White wine</run>
            </formatted-text>
          </desc>
        </column>
        <column caption='Good or poor rating?' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Either&quot;'>
          <calculation class='tableau' formula='&quot;Either&quot;' />
        </column>
        <column caption='Body?' datatype='string' name='[red/white (copy)_1016124693943943168]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='winequality-red.csv' id='winequality-red.csv_1CDC0BC675354DD99E7B6C161BABF09F'>
            <properties context=''>
              <relation connection='textscan.0tvfns610ti90c1c5m2eb111eb26' name='winequality-red.csv' table='[winequality-red#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Wine ID' ordinal='0' />
                  <column datatype='string' name='Red/White' ordinal='1' />
                  <column datatype='real' name='fixed acidity' ordinal='2' />
                  <column datatype='real' name='volatile acidity' ordinal='3' />
                  <column datatype='real' name='citric acid' ordinal='4' />
                  <column datatype='real' name='residual sugar' ordinal='5' />
                  <column datatype='real' name='chlorides' ordinal='6' />
                  <column datatype='real' name='free sulfur dioxide' ordinal='7' />
                  <column datatype='real' name='total sulfur dioxide' ordinal='8' />
                  <column datatype='real' name='density' ordinal='9' />
                  <column datatype='real' name='pH' ordinal='10' />
                  <column datatype='real' name='sulphates' ordinal='11' />
                  <column datatype='real' name='alcohol' ordinal='12' />
                  <column datatype='integer' name='quality' ordinal='13' />
                  <column datatype='real' name='Latitude' ordinal='14' />
                  <column datatype='real' name='Longitude' ordinal='15' />
                  <column datatype='string' name='F17' ordinal='16' />
                  <column datatype='string' name='F18' ordinal='17' />
                  <column datatype='string' name='F19' ordinal='18' />
                  <column datatype='string' name='F20' ordinal='19' />
                  <column datatype='string' name='F21' ordinal='20' />
                  <column datatype='string' name='F22' ordinal='21' />
                  <column datatype='integer' name='F23' ordinal='22' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='&lt;[Wine ID]&gt; Buy Now' name='[Action5_B673432572FC453CB7C08EFE4A76C8F6]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Wine Choices' />
      <link caption='' expression='https://www.winemag.com/buying-guide/casa-do-valle-2016-homenagem-reserva-red-minho/' />
    </action>
    <edit-parameter-action caption='&lt;Red or White?&gt;' name='[Action1_BA41A69DC80A4E3083527A9F99A29979]'>
      <activation type='on-select' />
      <source type='all' />
      <agg-type type='attr' />
      <_.fcp.ParameterActionClearSelection.true...clear-option type='assign-fixed-value' value='s:LROOT:Both' />
      <params>
        <param name='source-field' value='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Red/White:nk]' />
        <param name='target-parameter' value='[Parameters].[Parameter 2]' />
      </params>
    </edit-parameter-action>
    <edit-parameter-action caption='&lt;Body?&gt;' name='[Action2_86C0500710FD497385C407F13FFB5569]'>
      <activation type='on-select' />
      <source type='all' />
      <agg-type type='attr' />
      <_.fcp.ParameterActionClearSelection.true...clear-option type='assign-fixed-value' value='s:LROOT:All' />
      <params>
        <param name='source-field' value='[federated.08bwzi51wo3p411ahgcov1a86pmk].[attr:Calculation_1343480090941239299:nk]' />
        <param name='target-parameter' value='[Parameters].[red/white (copy)_1016124693943943168]' />
      </params>
    </edit-parameter-action>
    <edit-parameter-action caption='&lt;Sweetness?&gt;' name='[Action3_BDEED2C27CB44D42B9537ADB333E9839]'>
      <activation type='on-select' />
      <source type='all' />
      <agg-type type='attr' />
      <_.fcp.ParameterActionClearSelection.true...clear-option type='assign-fixed-value' value='s:LROOT:Any' />
      <params>
        <param name='source-field' value='[federated.08bwzi51wo3p411ahgcov1a86pmk].[attr:Calculation_1343480090982629380:nk]' />
        <param name='target-parameter' value='[Parameters].[Parameter 1]' />
      </params>
    </edit-parameter-action>
    <edit-parameter-action caption='&lt;Good or poor rating?&gt;' name='[Action4_064A746A8723485D8521B4FA5E9B338C]'>
      <activation type='on-select' />
      <source type='all' />
      <agg-type type='attr' />
      <_.fcp.ParameterActionClearSelection.true...clear-option type='assign-fixed-value' value='s:LROOT:Either' />
      <params>
        <param name='source-field' value='[federated.08bwzi51wo3p411ahgcov1a86pmk].[attr:Calculation_1343480090863804416:nk]' />
        <param name='target-parameter' value='[Parameters].[Parameter 3]' />
      </params>
    </edit-parameter-action>
  </actions>
  <worksheets>
    <worksheet name='Pivot table'>
      <table>
        <view>
          <datasources>
            <datasource caption='winequality-red' name='federated.08bwzi51wo3p411ahgcov1a86pmk' />
          </datasources>
          <datasource-dependencies datasource='federated.08bwzi51wo3p411ahgcov1a86pmk'>
            <column datatype='string' name='[Red/White]' role='dimension' type='nominal' />
            <column caption='Alcohol' datatype='real' name='[alcohol]' role='measure' type='quantitative' />
            <column-instance column='[alcohol]' derivation='Avg' name='[avg:alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[chlorides]' derivation='Avg' name='[avg:chlorides:qk]' pivot='key' type='quantitative' />
            <column-instance column='[citric acid]' derivation='Avg' name='[avg:citric acid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[density]' derivation='Avg' name='[avg:density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fixed acidity]' derivation='Avg' name='[avg:fixed acidity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[free sulfur dioxide]' derivation='Avg' name='[avg:free sulfur dioxide:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pH]' derivation='Avg' name='[avg:pH:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sulphates]' derivation='Avg' name='[avg:sulphates:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total sulfur dioxide]' derivation='Avg' name='[avg:total sulfur dioxide:qk]' pivot='key' type='quantitative' />
            <column-instance column='[volatile acidity]' derivation='Avg' name='[avg:volatile acidity:qk]' pivot='key' type='quantitative' />
            <column caption='Chlorides' datatype='real' name='[chlorides]' role='measure' type='quantitative' />
            <column caption='Citric Acid' datatype='real' name='[citric acid]' role='measure' type='quantitative' />
            <column caption='Density' datatype='real' name='[density]' role='measure' type='quantitative' />
            <column caption='Fixed Acidity' datatype='real' name='[fixed acidity]' role='measure' type='quantitative' />
            <column caption='Free Sulfur Dioxide' datatype='real' name='[free sulfur dioxide]' role='measure' type='quantitative' />
            <column-instance column='[residual sugar]' derivation='Max' name='[max:residual sugar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Red/White]' derivation='None' name='[none:Red/White:nk]' pivot='key' type='nominal' />
            <column-instance column='[quality]' derivation='None' name='[none:quality:ok]' pivot='key' type='ordinal' />
            <column caption='P H' datatype='real' name='[pH]' role='measure' type='quantitative' />
            <column caption='Quality' datatype='integer' name='[quality]' role='measure' type='quantitative' />
            <column caption='Residual Sugar' datatype='real' name='[residual sugar]' role='measure' type='quantitative' />
            <column caption='Sulphates' datatype='real' name='[sulphates]' role='measure' type='quantitative' />
            <column caption='Total Sulfur Dioxide' datatype='real' name='[total sulfur dioxide]' role='measure' type='quantitative' />
            <column caption='Volatile Acidity' datatype='real' name='[volatile acidity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:chlorides:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:citric acid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:density:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:fixed acidity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:free sulfur dioxide:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:pH:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[max:residual sugar:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:sulphates:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:total sulfur dioxide:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:volatile acidity:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:alcohol:qk]&quot;</bucket>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:chlorides:qk]&quot;</bucket>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:citric acid:qk]&quot;</bucket>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:density:qk]&quot;</bucket>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:fixed acidity:qk]&quot;</bucket>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:free sulfur dioxide:qk]&quot;</bucket>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:pH:qk]&quot;</bucket>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[max:residual sugar:qk]&quot;</bucket>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:sulphates:qk]&quot;</bucket>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:total sulfur dioxide:qk]&quot;</bucket>
              <bucket>&quot;[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:volatile acidity:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:quality:ok]' direction='ASC' measure-to-sort-by='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:quality:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.08bwzi51wo3p411ahgcov1a86pmk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Red/White:nk]' value='25' />
            <format attr='width' field='[federated.08bwzi51wo3p411ahgcov1a86pmk].[:Measure Names]' value='64' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:alcohol:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.08bwzi51wo3p411ahgcov1a86pmk].[none:quality:ok] / [federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Red/White:nk])</rows>
        <cols>[federated.08bwzi51wo3p411ahgcov1a86pmk].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D772CF55-8C93-4C79-8C29-E4B349196145}' />
    </worksheet>
    <worksheet name='Portugal'>
      <table>
        <view>
          <datasources>
            <datasource caption='winequality-red' name='federated.08bwzi51wo3p411ahgcov1a86pmk' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Red or White?' datatype='string' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Both&quot;'>
              <calculation class='tableau' formula='&quot;Both&quot;' />
              <desc>
                <formatted-text>
                  <run>Choose either &quot;Red&quot; or &quot;White wine</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Good or poor rating?' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Either&quot;'>
              <calculation class='tableau' formula='&quot;Either&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08bwzi51wo3p411ahgcov1a86pmk'>
            <column caption='Red' datatype='boolean' name='[Calculation_1016124693952077826]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Red/White] = &quot;Red&quot;' />
            </column>
            <column caption='White' datatype='boolean' name='[Calculation_1016124693952331779]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Red/White] = &quot;White&quot;' />
            </column>
            <column caption='Red/White Filter' datatype='boolean' name='[Calculation_1016124693952446468]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='( [Parameters].[Parameter 2] = &quot;Red&quot; AND [Calculation_1016124693952077826] )&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 2] = &quot;White&quot; AND [Calculation_1016124693952331779])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 2] = &quot;Both&quot; AND [Calculation_1016124693962498058])' />
            </column>
            <column caption='Both' datatype='boolean' name='[Calculation_1016124693962498058]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Red/White] = &quot;Red&quot;&#13;&#10;OR&#13;&#10;[Red/White] = &quot;White&quot;' />
            </column>
            <column caption='good or bad' datatype='string' name='[Calculation_1343480090863804416]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [quality] &gt; 6.5 THEN &quot;Good&quot;&#13;&#10;Else &quot;Bad&quot;&#13;&#10;END' />
            </column>
            <column caption='Body' datatype='string' name='[Calculation_1343480090941239299]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [alcohol] &gt; 13.4 THEN &quot;Full-Bodied&quot;&#13;&#10;ELSEIF  [alcohol] &gt; 12.4 THEN &quot;Medium-Bodied&quot;&#13;&#10;ELSE  &quot;Light-Bodied&quot;&#13;&#10;END' />
            </column>
            <column caption='sweetness' datatype='string' name='[Calculation_1343480090982629380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [residual sugar] &lt; 5.0 THEN &quot;Extra-Dry&quot;&#13;&#10;ELSEIF [residual sugar] &lt; 15.0 THEN &quot;Dry&quot;&#13;&#10;ELSEIF [residual sugar] &lt; 35.0 THEN &quot;Medium&quot;&#13;&#10;ELSEIF [residual sugar] &lt; 45.0 THEN &quot;Medium-Sweet&quot;&#13;&#10;ELSE &quot;Sweet&quot;&#13;&#10;END' />
            </column>
            <column caption='Good' datatype='boolean' name='[Calculation_481040763291832320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090863804416] = &quot;Good&quot;' />
            </column>
            <column caption='Poor' datatype='boolean' name='[Calculation_481040763291930625]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090863804416] = &quot;Bad&quot;' />
            </column>
            <column caption='Either' datatype='boolean' name='[Calculation_481040763292024834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090863804416] = &quot;Good&quot;&#13;&#10;OR&#13;&#10;[Calculation_1343480090863804416] = &quot;Bad&quot;' />
            </column>
            <column caption='Good or Poor filter' datatype='boolean' name='[Calculation_481040763292143619]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='( [Parameters].[Parameter 3] = &quot;Good&quot; AND [Calculation_481040763291832320])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 3] = &quot;Poor&quot; AND [Calculation_481040763291930625])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 3] = &quot;Either&quot; AND [Calculation_481040763292024834])' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Red/White]' role='dimension' type='nominal' />
            <column caption='Alcohol' datatype='real' name='[alcohol]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1343480090863804416]' derivation='Attribute' name='[attr:Calculation_1343480090863804416:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1343480090941239299]' derivation='Attribute' name='[attr:Calculation_1343480090941239299:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1343480090982629380]' derivation='Attribute' name='[attr:Calculation_1343480090982629380:nk]' pivot='key' type='nominal' />
            <column-instance column='[Red/White]' derivation='Attribute' name='[attr:Red/White:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1016124693952446468]' derivation='None' name='[none:Calculation_1016124693952446468:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_481040763292143619]' derivation='None' name='[none:Calculation_481040763292143619:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Red/White]' derivation='None' name='[none:Red/White:nk]' pivot='key' type='nominal' />
            <column caption='Quality' datatype='integer' name='[quality]' role='measure' type='quantitative' />
            <column caption='Residual Sugar' datatype='real' name='[residual sugar]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1016124693952446468:nk]'>
            <groupfilter function='member' level='[none:Calculation_1016124693952446468:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_481040763292143619:nk]'>
            <groupfilter function='member' level='[none:Calculation_481040763292143619:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1016124693952446468:nk]</column>
            <column>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_481040763292143619:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Longitude:qk]' field-type='quantitative' max='28713.163226689678' min='-1260049.8849891999' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Latitude:qk]' field-type='quantitative' max='5655411.4615103966' min='4303872.0117528336' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Red/White:nk]' />
              <tooltip column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[attr:Red/White:nk]' />
              <tooltip column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[attr:Calculation_1343480090941239299:nk]' />
              <tooltip column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[attr:Calculation_1343480090982629380:nk]' />
              <tooltip column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[attr:Calculation_1343480090863804416:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.08bwzi51wo3p411ahgcov1a86pmk].[attr:Calculation_1343480090941239299:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Red/White:nk]>]]></run>
                <run><![CDATA[
<[federated.08bwzi51wo3p411ahgcov1a86pmk].[attr:Calculation_1343480090982629380:nk]>
<[federated.08bwzi51wo3p411ahgcov1a86pmk].[attr:Calculation_1343480090863804416:nk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Latitude:qk]</rows>
        <cols>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Longitude:qk]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{B0421602-3084-4A64-803B-EC8389669C2F}' />
    </worksheet>
    <worksheet name='Quality Dist'>
      <table>
        <view>
          <datasources>
            <datasource caption='winequality-red' name='federated.08bwzi51wo3p411ahgcov1a86pmk' />
          </datasources>
          <datasource-dependencies datasource='federated.08bwzi51wo3p411ahgcov1a86pmk'>
            <column aggregation='None' datatype='integer' name='[Quality (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-1' formula='[quality]' peg='0' size='0.998' />
            </column>
            <column-instance column='[quality]' derivation='Count' name='[cnt:quality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quality (bin)]' derivation='None' name='[none:Quality (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Quality' datatype='integer' name='[quality]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
            <format attr='color' data-class='total' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.08bwzi51wo3p411ahgcov1a86pmk].[cnt:quality:qk]</rows>
        <cols>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Quality (bin):qk]</cols>
        <show-full-range>
          <column>[federated.08bwzi51wo3p411ahgcov1a86pmk].[Quality (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{856FBA62-417C-4C81-BFA1-1AC7345E21C0}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='winequality-red' name='federated.08bwzi51wo3p411ahgcov1a86pmk' />
          </datasources>
          <datasource-dependencies datasource='federated.08bwzi51wo3p411ahgcov1a86pmk'>
            <column aggregation='None' datatype='integer' name='[Alcohol (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-1' formula='[alcohol]' peg='0' size='0.5' />
            </column>
            <column caption='Alcohol' datatype='real' name='[alcohol]' role='measure' type='quantitative' />
            <column-instance column='[quality]' derivation='Avg' name='[avg:quality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[alcohol]' derivation='Count' name='[cnt:alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alcohol (bin)]' derivation='None' name='[none:Alcohol (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Quality' datatype='integer' name='[quality]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <text column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[avg:quality:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08bwzi51wo3p411ahgcov1a86pmk].[cnt:alcohol:qk]</rows>
        <cols>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Alcohol (bin):qk]</cols>
        <show-full-range>
          <column>[federated.08bwzi51wo3p411ahgcov1a86pmk].[Alcohol (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{87893797-890C-4FA5-BDF8-775079DDE576}' />
    </worksheet>
    <worksheet name='Wine Choices'>
      <table>
        <view>
          <datasources>
            <datasource caption='winequality-red' name='federated.08bwzi51wo3p411ahgcov1a86pmk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Sweetness?' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Red or White?' datatype='string' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Both&quot;'>
              <calculation class='tableau' formula='&quot;Both&quot;' />
              <desc>
                <formatted-text>
                  <run>Choose either &quot;Red&quot; or &quot;White wine</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Good or poor rating?' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Either&quot;'>
              <calculation class='tableau' formula='&quot;Either&quot;' />
            </column>
            <column caption='Body?' datatype='string' name='[red/white (copy)_1016124693943943168]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08bwzi51wo3p411ahgcov1a86pmk'>
            <column caption='Red' datatype='boolean' name='[Calculation_1016124693952077826]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Red/White] = &quot;Red&quot;' />
            </column>
            <column caption='White' datatype='boolean' name='[Calculation_1016124693952331779]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Red/White] = &quot;White&quot;' />
            </column>
            <column caption='Red/White Filter' datatype='boolean' name='[Calculation_1016124693952446468]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='( [Parameters].[Parameter 2] = &quot;Red&quot; AND [Calculation_1016124693952077826] )&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 2] = &quot;White&quot; AND [Calculation_1016124693952331779])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 2] = &quot;Both&quot; AND [Calculation_1016124693962498058])' />
            </column>
            <column caption='Light-Bodied' datatype='boolean' name='[Calculation_1016124693955674117]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090941239299] = &quot;Light-Bodied&quot;' />
            </column>
            <column caption='Medium-Bodied' datatype='boolean' name='[Calculation_1016124693955919878]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090941239299] = &quot;Medium-Bodied&quot;' />
            </column>
            <column caption='Full-Bodied' datatype='boolean' name='[Calculation_1016124693956014087]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090941239299] = &quot;Full-Bodied&quot;' />
            </column>
            <column caption='Body filter' datatype='boolean' name='[Calculation_1016124693956161544]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='( [Parameters].[red/white (copy)_1016124693943943168] = &quot;Light-Bodied&quot; AND [Calculation_1016124693955674117])&#13;&#10;OR&#13;&#10;( [Parameters].[red/white (copy)_1016124693943943168] = &quot;Medium-Bodied&quot; AND [Calculation_1016124693955919878])&#13;&#10;OR&#13;&#10;( [Parameters].[red/white (copy)_1016124693943943168] = &quot;Full-Bodied&quot; AND [Calculation_1016124693956014087])&#13;&#10;OR&#13;&#10;( [Parameters].[red/white (copy)_1016124693943943168] = &quot;All&quot; AND [Calculation_1016124693968658444])' />
            </column>
            <column caption='Both' datatype='boolean' name='[Calculation_1016124693962498058]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Red/White] = &quot;Red&quot;&#13;&#10;OR&#13;&#10;[Red/White] = &quot;White&quot;' />
            </column>
            <column caption='All' datatype='boolean' name='[Calculation_1016124693968658444]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090941239299] = &quot;Light-Bodied&quot;&#13;&#10;OR&#13;&#10;[Calculation_1343480090941239299] = &quot;Medium-Bodied&quot;&#13;&#10;OR&#13;&#10;[Calculation_1343480090941239299] = &quot;Full-Bodied&quot;' />
            </column>
            <column caption='Extra-Dry' datatype='boolean' name='[Calculation_1016124693973319693]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090982629380] = &quot;Extra-Dry&quot;' />
            </column>
            <column caption='Dry' datatype='boolean' name='[Calculation_1016124693973463054]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090982629380] = &quot;Dry&quot;' />
            </column>
            <column caption='Medium' datatype='boolean' name='[Calculation_1016124693973549071]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090982629380] = &quot;Medium&quot;' />
            </column>
            <column caption='Medium-Sweet' datatype='boolean' name='[Calculation_1016124693973991440]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090982629380] = &quot;Medium-Sweet&quot;' />
            </column>
            <column caption='Sweet' datatype='boolean' name='[Calculation_1016124693974069265]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090982629380] = &quot;Sweet&quot;' />
            </column>
            <column caption='Any' datatype='boolean' name='[Calculation_1016124693974200338]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090982629380] = &quot;Extra-Dry&quot;&#13;&#10;OR &#13;&#10;[Calculation_1343480090982629380] = &quot;Dry&quot;&#13;&#10;OR &#13;&#10;[Calculation_1343480090982629380] = &quot;Medium&quot;&#13;&#10;OR &#13;&#10;[Calculation_1343480090982629380] = &quot;Medium-Sweet&quot;&#13;&#10;OR &#13;&#10;[Calculation_1343480090982629380] = &quot;Sweet&quot;' />
            </column>
            <column caption='Sweetness filter' datatype='boolean' name='[Calculation_1016124693974597651]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='( [Parameters].[Parameter 1] = &quot;Extra-Dry&quot; AND [Calculation_1016124693973319693])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 1] = &quot;Dry&quot; AND [Calculation_1016124693973463054])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 1] = &quot;Medium&quot; AND [Calculation_1016124693973549071])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 1] = &quot;Medium-Sweet&quot; AND [Calculation_1016124693973991440])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 1] = &quot;Sweet&quot; AND [Calculation_1016124693974069265])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 1] = &quot;Any&quot; AND [Calculation_1016124693974200338])' />
            </column>
            <column caption='good or bad' datatype='string' name='[Calculation_1343480090863804416]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [quality] &gt; 6.5 THEN &quot;Good&quot;&#13;&#10;Else &quot;Bad&quot;&#13;&#10;END' />
            </column>
            <column caption='Body' datatype='string' name='[Calculation_1343480090941239299]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [alcohol] &gt; 13.4 THEN &quot;Full-Bodied&quot;&#13;&#10;ELSEIF  [alcohol] &gt; 12.4 THEN &quot;Medium-Bodied&quot;&#13;&#10;ELSE  &quot;Light-Bodied&quot;&#13;&#10;END' />
            </column>
            <column caption='sweetness' datatype='string' name='[Calculation_1343480090982629380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [residual sugar] &lt; 5.0 THEN &quot;Extra-Dry&quot;&#13;&#10;ELSEIF [residual sugar] &lt; 15.0 THEN &quot;Dry&quot;&#13;&#10;ELSEIF [residual sugar] &lt; 35.0 THEN &quot;Medium&quot;&#13;&#10;ELSEIF [residual sugar] &lt; 45.0 THEN &quot;Medium-Sweet&quot;&#13;&#10;ELSE &quot;Sweet&quot;&#13;&#10;END' />
            </column>
            <column caption='Good' datatype='boolean' name='[Calculation_481040763291832320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090863804416] = &quot;Good&quot;' />
            </column>
            <column caption='Poor' datatype='boolean' name='[Calculation_481040763291930625]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090863804416] = &quot;Bad&quot;' />
            </column>
            <column caption='Either' datatype='boolean' name='[Calculation_481040763292024834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1343480090863804416] = &quot;Good&quot;&#13;&#10;OR&#13;&#10;[Calculation_1343480090863804416] = &quot;Bad&quot;' />
            </column>
            <column caption='Good or Poor filter' datatype='boolean' name='[Calculation_481040763292143619]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='( [Parameters].[Parameter 3] = &quot;Good&quot; AND [Calculation_481040763291832320])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 3] = &quot;Poor&quot; AND [Calculation_481040763291930625])&#13;&#10;OR&#13;&#10;( [Parameters].[Parameter 3] = &quot;Either&quot; AND [Calculation_481040763292024834])' />
            </column>
            <column caption='8 or higher' datatype='boolean' name='[Calculation_481040763297505284]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[quality] &gt; 7' />
            </column>
            <column datatype='string' name='[Red/White]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Wine ID]' role='measure' type='quantitative' />
            <column caption='Alcohol' datatype='real' name='[alcohol]' role='measure' type='quantitative' />
            <column-instance column='[quality]' derivation='Max' name='[max:quality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1016124693952446468]' derivation='None' name='[none:Calculation_1016124693952446468:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1016124693956161544]' derivation='None' name='[none:Calculation_1016124693956161544:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1016124693974597651]' derivation='None' name='[none:Calculation_1016124693974597651:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_481040763292143619]' derivation='None' name='[none:Calculation_481040763292143619:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_481040763297505284]' derivation='None' name='[none:Calculation_481040763297505284:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wine ID]' derivation='None' name='[none:Wine ID:qk]' pivot='key' type='quantitative' />
            <column caption='Quality' datatype='integer' name='[quality]' role='measure' type='quantitative' />
            <column caption='Residual Sugar' datatype='real' name='[residual sugar]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1016124693952446468:nk]'>
            <groupfilter function='member' level='[none:Calculation_1016124693952446468:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1016124693956161544:nk]'>
            <groupfilter function='member' level='[none:Calculation_1016124693956161544:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1016124693974597651:nk]'>
            <groupfilter function='member' level='[none:Calculation_1016124693974597651:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_481040763292143619:nk]'>
            <groupfilter function='member' level='[none:Calculation_481040763292143619:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_481040763297505284:nk]' direction='DESC' />
          <slices>
            <column>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1016124693952446468:nk]</column>
            <column>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1016124693956161544:nk]</column>
            <column>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1016124693974597651:nk]</column>
            <column>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_481040763292143619:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_481040763297505284:nk]' />
              <tooltip column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[max:quality:qk]' />
              <text column='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Wine ID:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Wine ID:&#9;</run>
                <run bold='true'><![CDATA[<[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Wine ID:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Quality:&#9;</run>
                <run bold='true'><![CDATA[<[federated.08bwzi51wo3p411ahgcov1a86pmk].[max:quality:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <table-calculations>
          <partitionable-measures>
            <column>[Parameters].[Parameter 2]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
      <simple-id uuid='{1F28086D-7218-4B3D-9726-C632DD468BA5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Sweetness?' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
          <members>
            <member value='&quot;Extra-Dry&quot;' />
            <member value='&quot;Dry&quot;' />
            <member value='&quot;Medium&quot;' />
            <member value='&quot;Medium-Sweet&quot;' />
            <member value='&quot;Sweet&quot;' />
            <member value='&quot;Any&quot;' />
          </members>
        </column>
        <column caption='Red or White?' datatype='string' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Both&quot;'>
          <calculation class='tableau' formula='&quot;Both&quot;' />
          <desc>
            <formatted-text>
              <run>Choose either &quot;Red&quot; or &quot;White wine</run>
            </formatted-text>
          </desc>
          <members>
            <member value='&quot;Red&quot;' />
            <member value='&quot;White&quot;' />
            <member value='&quot;Both&quot;' />
          </members>
        </column>
        <column caption='Good or poor rating?' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Either&quot;'>
          <calculation class='tableau' formula='&quot;Either&quot;' />
          <members>
            <member value='&quot;Good&quot;' />
            <member value='&quot;Poor&quot;' />
            <member value='&quot;Either&quot;' />
          </members>
        </column>
        <column caption='Body?' datatype='string' name='[red/white (copy)_1016124693943943168]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
          <members>
            <member value='&quot;Light-Bodied&quot;' />
            <member value='&quot;Medium-Bodied&quot;' />
            <member value='&quot;Full-Bodied&quot;' />
            <member value='&quot;All&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='1' name='Portugal' w='70700' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='61125' id='11' name='Wine Choices' w='27700' x='71500' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='141' h='36875' id='4' is-fixed='true' param='vert' type-v2='layout-flow' w='27700' x='71500' y='62125'>
                <zone h='8250' id='6' name='Portugal' pane-specification-id='0' param='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Red/White:nk]' type-v2='color' w='27700' x='71500' y='62125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6500' id='7' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='27700' x='71500' y='70375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6500' id='8' mode='compact' param='[Parameters].[red/white (copy)_1016124693943943168]' type-v2='paramctrl' w='27700' x='71500' y='76875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6500' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='27700' x='71500' y='83375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6500' id='10' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='27700' x='71500' y='89875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='53' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='52' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98000' id='1' is-fixed='true' name='Portugal' w='70700' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='6' name='Portugal' pane-specification-id='0' param='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Red/White:nk]' type-v2='color' w='27700' x='71500' y='62125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61125' id='11' is-fixed='true' name='Wine Choices' w='27700' x='71500' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='7' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='27700' x='71500' y='70375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='8' mode='compact' param='[Parameters].[red/white (copy)_1016124693943943168]' type-v2='paramctrl' w='27700' x='71500' y='76875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='27700' x='71500' y='83375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='10' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='27700' x='71500' y='89875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3B64A57C-B9FA-4313-BBB2-7C3B0A9604F2}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Quality Dist'>
      <cards>
        <edge name='left'>
          <strip size='164'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[:Measure Names]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Red/White:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:quality:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32849201-2EAA-42E5-A3DE-632D7A8320D2}' />
    </window>
    <window class='worksheet' name='Pivot table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[:Measure Names]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[attr:quality:ok]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1343480090863804416:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1343480090941239299:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Red/White:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:quality:ok]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:quality:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1DA3A9F5-835B-4F5E-AAD5-3E0A7F4BACE9}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{051BFFB7-EC61-476B-9DF8-8191017BDCCE}' />
    </window>
    <window class='worksheet' name='Wine Choices'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[red/white (copy)_1016124693943943168]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='0' param='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_481040763297505284:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1016124693952446468:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1016124693956161544:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1016124693974597651:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1343480090863804416:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1343480090941239299:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1343480090982629380:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_481040763292143619:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_481040763297505284:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Quality (bin):qk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Red/White:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:quality:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8AED166-4A5D-4099-9D3C-C5D3DDEF0A48}' />
    </window>
    <window class='worksheet' maximized='true' name='Portugal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[red/white (copy)_1016124693943943168]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='0' param='[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Red/White:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1016124693952446468:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1343480090863804416:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1343480090941239299:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_1343480090982629380:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Calculation_481040763292143619:nk]</field>
            <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Red/White:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FEB29BBA-757C-4CC4-941F-98BBC0EB3613}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Portugal'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.08bwzi51wo3p411ahgcov1a86pmk].[none:Red/White:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Wine Choices'>
          <zoom type='fit-height' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8F7B3545-1D23-455F-B31C-B8A3B4E03A8B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pivot table' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Portugal' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAE2ElEQVR4nO3du25cVRiG4W+tfZgZjx3H8SGJjZFjxCFQIRdIFBRUFFwB9DRUXAqU9NAi
      0SIhhBQpiCoCRaICk8RxcMbH8Xhm9mHRQE8Re5C+97mB/Rf7nfWv3Uz4+reDdFBFAY7ygyrq
      cZXNeg5gJvjphzUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgK1cLQHA11ZnQgDwVIRWt8szAoCnN3sn
      2lncJwB4mqQoBS7BMLVaTNXJlpTPehBgFv4Yz+vnXQKAqUfTniRWIJgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjANja7IwIAJ6ikt5fHCif9SDA
      VVvNp/pg6alWygkBwEuhpI9uj5S3Ub3QJwB4qRT0YH+sN+ZGOh233AHgp5wrdW1+TnmWEQDM
      pKSbRS1JWi6mrEDwslFWutW5UFFdqOnmBAAv7y6cKSgqqFRI3AFg5lo+lSS1MSo2BAATWZC2
      2lN1i1KDo6GaolA+HrECwUMWpIuHP2lh9XU9e36ux7t/aXW+zwkAH1modNivtX9wpGnT6mQ0
      JgB4aJPUXci1+3BP29tbyrOoXqxZgeAhpVqbO41WsqBXj49157WbypuaEwAeWkUVoa/Ns0zV
      +l3lx/vKFtc5AeAhKWo43Naf1VQbgwMNypuae7ZHAPBxf/SS7kvSidQJSZ8sD1iB4GmSgp5O
      uAPA2L3xdQKAr9MmJwD4WswaAoCvwzoQAHyNU0kA8EYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAuFIL7RPF519pNT+f9SiSCABXqAzSLw8+0zf3PtX3P36o
      +TzMeiT+KR5XZ5qknbe/0Pbql1rb+Fj7dZr1SASAF6cMjcrBD4r9O1J3XQpBdYrKVEsKmqiU
      Lo601HlZRWddC3WtLLTK1KiojzWK11WHjnJValOrsbqq0+WeEgSAFyamVmH8VN3mSIePvtXy
      0ram1UhtZ02qTlWWK2rTWN1yU2dPvlMz3FX3xlsaT88VozQdDdQvu4p5X6PhnubW3tNp7+6l
      zkwAeGEaRZX9VzTJ++qVGwoLm4pNozQ5UCxvqCpvadKOlaqBNLes7vy2qt6mQmoUmmP1r0UV
      F7/rfLinbPkdteXapc8cPv91kB5X2aU/CPgvOv98lpm0V/M8TgD8r1zVi/8vPoPCGgHAGgHA
      2t/LTvo5fNKu/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Quality Dist' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Wine Choices' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
